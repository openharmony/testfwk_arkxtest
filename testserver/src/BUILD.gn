# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/config/components/idl_tool/idl.gni")
import("//test/testfwk/arkxtest/arkxtest_config.gni")

idl_interface_sources = [
  "${target_gen_dir}/test_server_interface_proxy.cpp",
  "${target_gen_dir}/test_server_interface_stub.cpp",
]

idl_gen_interface("test_server_interface") {
  src_idl = rebase_path("ITestServerInterface.idl")
  sources_common = [
    "Types.idl",
  ]
  dst_file = string_join(",", idl_interface_sources)
  log_domainid = "0xD003110"
  log_tag = "TestServerIPC"
}

config("test_server_service_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "service",
    "client",
    "utils",
    "${target_gen_dir}",
  ]
  cflags_cc = [ "-fexceptions" ]
}

ohos_shared_library("test_server_service") {
  configs = [ ":test_server_service_config" ]

  output_values = get_target_outputs(":test_server_interface")
  sources = [
    "${target_gen_dir}/test_server_interface_stub.cpp",
    "service/test_server_service.cpp",
    "${target_gen_dir}/types.cpp",
  ]
  sources += filter_include(output_values, [ "test_server_interface_stub.cpp" ])

  deps = [ ":test_server_interface" ]

  defines = []
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "hiview:libucollection_utility",
    "init:libbegetutil",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "soc_perf:socperf_client",
    "window_manager:session_manager_lite",
    "ability_runtime:app_manager",
  ]

  if (arkxtest_product_feature == "phone" || arkxtest_product_feature == "tablet") {
    external_deps += [
      "data_share:datashare_consumer",
    ]
    defines += [ "ARKXTEST_KNUCKLE_ACTION_ENABLE"]
  }
  if (defined(global_parts_info) && defined(global_parts_info.distributeddatamgr_udmf)) {
    external_deps += [
      "udmf:udmf_client",
    ]
  }

  if (defined(global_parts_info) && defined(global_parts_info.distributeddatamgr_pasteboard)) {
    external_deps += [
      "pasteboard:pasteboard_client",
      "pasteboard:pasteboard_data",
    ]
    defines += [ "ARKXTEST_PASTEBOARD_ENABLE"]
  }

  part_name = "arkxtest"
  subsystem_name = "testfwk"
}

config("test_server_client_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "client",
    "utils",
    "${target_gen_dir}",
  ]
}

ohos_shared_library("test_server_client") {
  public_configs = [ ":test_server_client_config" ]

  output_values = get_target_outputs(":test_server_interface")
  sources = [
    "${target_gen_dir}/test_server_interface_proxy.cpp",
    "client/test_server_client.cpp",
    "${target_gen_dir}/types.cpp",
  ]
  sources +=
      filter_include(output_values, [ "test_server_interface_proxy.cpp" ])

  deps = [ ":test_server_interface" ]

  external_deps = [
    "ability_base:want",
    "c_utils:utils",
    "common_event_service:cesfwk_innerkits",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  part_name = "arkxtest"
  subsystem_name = "testfwk"
}
